/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(qpsk_phase_ambiguity_solver.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(28219cba3ee4758db65dc54cb9effcf2)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/comm_tools/qpsk_phase_ambiguity_solver.h>
// pydoc.h is automatically generated in the build directory
#include <qpsk_phase_ambiguity_solver_pydoc.h>

void bind_qpsk_phase_ambiguity_solver(py::module& m)
{

    using qpsk_phase_ambiguity_solver    = gr::comm_tools::qpsk_phase_ambiguity_solver;


    py::class_<qpsk_phase_ambiguity_solver, gr::sync_interpolator,
        std::shared_ptr<qpsk_phase_ambiguity_solver>>(m, "qpsk_phase_ambiguity_solver", D(qpsk_phase_ambiguity_solver))

        .def(py::init(&qpsk_phase_ambiguity_solver::make),
           py::arg("sync_word"),
           py::arg("tolerance"),
           py::arg("tag_lock_name"),
           D(qpsk_phase_ambiguity_solver,make)
        )
        
        .def("set_sync_word", &qpsk_phase_ambiguity_solver::set_sync_word, py::arg("sync_word"), D(qpsk_phase_ambiguity_solver, set_sync_word))  
        .def("set_tolerance", &qpsk_phase_ambiguity_solver::set_tolerance, py::arg("tolerance"), D(qpsk_phase_ambiguity_solver, set_tolerance))  


        ;




}








